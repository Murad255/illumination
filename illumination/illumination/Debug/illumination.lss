
illumination.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000236  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  000002aa  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000007  00800060  00800060  000002aa  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000002aa  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000002dc  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000090  00000000  00000000  00000318  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000091a  00000000  00000000  000003a8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000058a  00000000  00000000  00000cc2  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000460  00000000  00000000  0000124c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000164  00000000  00000000  000016ac  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000003d7  00000000  00000000  00001810  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000365  00000000  00000000  00001be7  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000080  00000000  00000000  00001f4c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	09 c0       	rjmp	.+18     	; 0x14 <__ctors_end>
   2:	46 c0       	rjmp	.+140    	; 0x90 <__vector_1>
   4:	15 c0       	rjmp	.+42     	; 0x30 <__bad_interrupt>
   6:	14 c0       	rjmp	.+40     	; 0x30 <__bad_interrupt>
   8:	13 c0       	rjmp	.+38     	; 0x30 <__bad_interrupt>
   a:	12 c0       	rjmp	.+36     	; 0x30 <__bad_interrupt>
   c:	11 c0       	rjmp	.+34     	; 0x30 <__bad_interrupt>
   e:	10 c0       	rjmp	.+32     	; 0x30 <__bad_interrupt>
  10:	5f c0       	rjmp	.+190    	; 0xd0 <__vector_8>
  12:	0e c0       	rjmp	.+28     	; 0x30 <__bad_interrupt>

00000014 <__ctors_end>:
  14:	11 24       	eor	r1, r1
  16:	1f be       	out	0x3f, r1	; 63
  18:	cf e9       	ldi	r28, 0x9F	; 159
  1a:	cd bf       	out	0x3d, r28	; 61

0000001c <__do_clear_bss>:
  1c:	20 e0       	ldi	r18, 0x00	; 0
  1e:	a0 e6       	ldi	r26, 0x60	; 96
  20:	b0 e0       	ldi	r27, 0x00	; 0
  22:	01 c0       	rjmp	.+2      	; 0x26 <.do_clear_bss_start>

00000024 <.do_clear_bss_loop>:
  24:	1d 92       	st	X+, r1

00000026 <.do_clear_bss_start>:
  26:	a7 36       	cpi	r26, 0x67	; 103
  28:	b2 07       	cpc	r27, r18
  2a:	e1 f7       	brne	.-8      	; 0x24 <.do_clear_bss_loop>
  2c:	9e d0       	rcall	.+316    	; 0x16a <main>
  2e:	01 c1       	rjmp	.+514    	; 0x232 <_exit>

00000030 <__bad_interrupt>:
  30:	e7 cf       	rjmp	.-50     	; 0x0 <__vectors>

00000032 <_Z8PWMbeginv>:
			if (getCicle() - temp >= time)f1 = 1;
			return 0;
		}	
	}
	return 0;
}
  32:	81 e0       	ldi	r24, 0x01	; 1
  34:	87 bb       	out	0x17, r24	; 23
  36:	93 ea       	ldi	r25, 0xA3	; 163
  38:	9f bd       	out	0x2f, r25	; 47
  3a:	83 bf       	out	0x33, r24	; 51
  3c:	08 95       	ret

0000003e <_Z6ledOffv>:
  3e:	16 be       	out	0x36, r1	; 54
  40:	10 92 66 00 	sts	0x0066, r1	; 0x800066 <f>
  44:	08 95       	ret

00000046 <_Z5ledOnh>:
  46:	91 e0       	ldi	r25, 0x01	; 1
  48:	90 93 66 00 	sts	0x0066, r25	; 0x800066 <f>
  4c:	80 93 65 00 	sts	0x0065, r24	; 0x800065 <_ZL1i>
  50:	98 2f       	mov	r25, r24
  52:	99 0f       	add	r25, r25
  54:	89 0f       	add	r24, r25
  56:	98 2f       	mov	r25, r24
  58:	92 95       	swap	r25
  5a:	90 7f       	andi	r25, 0xF0	; 240
  5c:	89 0f       	add	r24, r25
  5e:	86 bf       	out	0x36, r24	; 54
  60:	08 95       	ret

00000062 <_Z2Upv>:
  62:	80 91 65 00 	lds	r24, 0x0065	; 0x800065 <_ZL1i>
  66:	85 30       	cpi	r24, 0x05	; 5
  68:	20 f0       	brcs	.+8      	; 0x72 <_Z2Upv+0x10>
  6a:	e9 df       	rcall	.-46     	; 0x3e <_Z6ledOffv>
  6c:	10 92 65 00 	sts	0x0065, r1	; 0x800065 <_ZL1i>
  70:	08 95       	ret
  72:	8f 5f       	subi	r24, 0xFF	; 255
  74:	80 93 65 00 	sts	0x0065, r24	; 0x800065 <_ZL1i>
  78:	e6 df       	rcall	.-52     	; 0x46 <_Z5ledOnh>
  7a:	08 95       	ret

0000007c <_Z9ledInvertv>:
  7c:	80 91 66 00 	lds	r24, 0x0066	; 0x800066 <f>
  80:	81 11       	cpse	r24, r1
  82:	04 c0       	rjmp	.+8      	; 0x8c <_Z9ledInvertv+0x10>
  84:	80 91 65 00 	lds	r24, 0x0065	; 0x800065 <_ZL1i>
  88:	de df       	rcall	.-68     	; 0x46 <_Z5ledOnh>
  8a:	08 95       	ret
  8c:	d8 df       	rcall	.-80     	; 0x3e <_Z6ledOffv>
  8e:	08 95       	ret

00000090 <__vector_1>:
  90:	1f 92       	push	r1
  92:	0f 92       	push	r0
  94:	0f b6       	in	r0, 0x3f	; 63
  96:	0f 92       	push	r0
  98:	11 24       	eor	r1, r1
  9a:	8f 93       	push	r24
  9c:	80 91 64 00 	lds	r24, 0x0064	; 0x800064 <flag>
  a0:	8f 5f       	subi	r24, 0xFF	; 255
  a2:	80 93 64 00 	sts	0x0064, r24	; 0x800064 <flag>
  a6:	8f 91       	pop	r24
  a8:	0f 90       	pop	r0
  aa:	0f be       	out	0x3f, r0	; 63
  ac:	0f 90       	pop	r0
  ae:	1f 90       	pop	r1
  b0:	18 95       	reti

000000b2 <_Z10ExIntBeginv>:
  b2:	ba 98       	cbi	0x17, 2	; 23
  b4:	c2 9a       	sbi	0x18, 2	; 24
  b6:	83 e0       	ldi	r24, 0x03	; 3
  b8:	85 bf       	out	0x35, r24	; 53
  ba:	80 e4       	ldi	r24, 0x40	; 64
  bc:	8b bf       	out	0x3b, r24	; 59
  be:	78 94       	sei
  c0:	08 95       	ret

000000c2 <_Z14availableExIntv>:
  c2:	90 91 64 00 	lds	r25, 0x0064	; 0x800064 <flag>
  c6:	81 e0       	ldi	r24, 0x01	; 1
  c8:	91 11       	cpse	r25, r1
  ca:	01 c0       	rjmp	.+2      	; 0xce <_Z14availableExIntv+0xc>
  cc:	80 e0       	ldi	r24, 0x00	; 0
  ce:	08 95       	ret

000000d0 <__vector_8>:
  d0:	1f 92       	push	r1
  d2:	0f 92       	push	r0
  d4:	0f b6       	in	r0, 0x3f	; 63
  d6:	0f 92       	push	r0
  d8:	11 24       	eor	r1, r1
  da:	8f 93       	push	r24
  dc:	9f 93       	push	r25
  de:	af 93       	push	r26
  e0:	bf 93       	push	r27
  e2:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <_edata>
  e6:	90 91 61 00 	lds	r25, 0x0061	; 0x800061 <_edata+0x1>
  ea:	a0 91 62 00 	lds	r26, 0x0062	; 0x800062 <_edata+0x2>
  ee:	b0 91 63 00 	lds	r27, 0x0063	; 0x800063 <_edata+0x3>
  f2:	40 96       	adiw	r24, 0x10	; 16
  f4:	a1 1d       	adc	r26, r1
  f6:	b1 1d       	adc	r27, r1
  f8:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <_edata>
  fc:	90 93 61 00 	sts	0x0061, r25	; 0x800061 <_edata+0x1>
 100:	a0 93 62 00 	sts	0x0062, r26	; 0x800062 <_edata+0x2>
 104:	b0 93 63 00 	sts	0x0063, r27	; 0x800063 <_edata+0x3>
 108:	bf 91       	pop	r27
 10a:	af 91       	pop	r26
 10c:	9f 91       	pop	r25
 10e:	8f 91       	pop	r24
 110:	0f 90       	pop	r0
 112:	0f be       	out	0x3f, r0	; 63
 114:	0f 90       	pop	r0
 116:	1f 90       	pop	r1
 118:	18 95       	reti

0000011a <_Z6wBeginv>:
 11a:	81 b5       	in	r24, 0x21	; 33
 11c:	80 61       	ori	r24, 0x10	; 16
 11e:	81 bd       	out	0x21, r24	; 33
 120:	81 b5       	in	r24, 0x21	; 33
 122:	80 64       	ori	r24, 0x40	; 64
 124:	81 bd       	out	0x21, r24	; 33
 126:	78 94       	sei
 128:	08 95       	ret

0000012a <_Z5delaym>:
 12a:	0f 93       	push	r16
 12c:	1f 93       	push	r17
 12e:	8b 01       	movw	r16, r22
 130:	9c 01       	movw	r18, r24
 132:	40 91 60 00 	lds	r20, 0x0060	; 0x800060 <_edata>
 136:	50 91 61 00 	lds	r21, 0x0061	; 0x800061 <_edata+0x1>
 13a:	60 91 62 00 	lds	r22, 0x0062	; 0x800062 <_edata+0x2>
 13e:	70 91 63 00 	lds	r23, 0x0063	; 0x800063 <_edata+0x3>
 142:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <_edata>
 146:	90 91 61 00 	lds	r25, 0x0061	; 0x800061 <_edata+0x1>
 14a:	a0 91 62 00 	lds	r26, 0x0062	; 0x800062 <_edata+0x2>
 14e:	b0 91 63 00 	lds	r27, 0x0063	; 0x800063 <_edata+0x3>
 152:	84 1b       	sub	r24, r20
 154:	95 0b       	sbc	r25, r21
 156:	a6 0b       	sbc	r26, r22
 158:	b7 0b       	sbc	r27, r23
 15a:	80 17       	cp	r24, r16
 15c:	91 07       	cpc	r25, r17
 15e:	a2 07       	cpc	r26, r18
 160:	b3 07       	cpc	r27, r19
 162:	78 f3       	brcs	.-34     	; 0x142 <_Z5delaym+0x18>
 164:	1f 91       	pop	r17
 166:	0f 91       	pop	r16
 168:	08 95       	ret

0000016a <main>:
#include "lib/ExternalInterupt.h"
#include "lib/watcdog.h"

int main()
{
	wBegin();
 16a:	d7 df       	rcall	.-82     	; 0x11a <_Z6wBeginv>
	PWMbegin();
 16c:	62 df       	rcall	.-316    	; 0x32 <_Z8PWMbeginv>
	ExIntBegin();
 16e:	a1 df       	rcall	.-190    	; 0xb2 <_Z10ExIntBeginv>

	ledOff();
 170:	66 df       	rcall	.-308    	; 0x3e <_Z6ledOffv>
	delay(300);
 172:	6c e2       	ldi	r22, 0x2C	; 44
 174:	71 e0       	ldi	r23, 0x01	; 1
 176:	80 e0       	ldi	r24, 0x00	; 0
 178:	90 e0       	ldi	r25, 0x00	; 0
 17a:	d7 df       	rcall	.-82     	; 0x12a <_Z5delaym>
 17c:	c0 e0       	ldi	r28, 0x00	; 0
	for(int n=0;n<6;n++){
		ledOn(n);
 17e:	8c 2f       	mov	r24, r28
 180:	62 df       	rcall	.-316    	; 0x46 <_Z5ledOnh>
		delay(200);
 182:	68 ec       	ldi	r22, 0xC8	; 200
 184:	70 e0       	ldi	r23, 0x00	; 0
 186:	80 e0       	ldi	r24, 0x00	; 0
 188:	90 e0       	ldi	r25, 0x00	; 0
 18a:	cf df       	rcall	.-98     	; 0x12a <_Z5delaym>
 18c:	cf 5f       	subi	r28, 0xFF	; 255
	PWMbegin();
	ExIntBegin();

	ledOff();
	delay(300);
	for(int n=0;n<6;n++){
 18e:	c6 30       	cpi	r28, 0x06	; 6
 190:	b1 f7       	brne	.-20     	; 0x17e <main+0x14>
		ledOn(n);
		delay(200);
	}
	ledOff();
 192:	55 df       	rcall	.-342    	; 0x3e <_Z6ledOffv>


	while(1){
		if(availableExInt()){
 194:	96 df       	rcall	.-212    	; 0xc2 <_Z14availableExIntv>
 196:	88 23       	and	r24, r24
 198:	e9 f3       	breq	.-6      	; 0x194 <main+0x2a>
			delay(220);
 19a:	6c ed       	ldi	r22, 0xDC	; 220
 19c:	70 e0       	ldi	r23, 0x00	; 0
 19e:	80 e0       	ldi	r24, 0x00	; 0
 1a0:	90 e0       	ldi	r25, 0x00	; 0
 1a2:	c3 df       	rcall	.-122    	; 0x12a <_Z5delaym>
		//EIMSK 
		GIMSK= (1<<INT0);
		sei();
	}
	byte readExInt(){
		byte n=flag;
 1a4:	80 91 64 00 	lds	r24, 0x0064	; 0x800064 <flag>
		flag =0;
 1a8:	10 92 64 00 	sts	0x0064, r1	; 0x800064 <flag>
			int n=(int)readExInt();
 1ac:	90 e0       	ldi	r25, 0x00	; 0
			if(n==1){
 1ae:	81 30       	cpi	r24, 0x01	; 1
 1b0:	91 05       	cpc	r25, r1
 1b2:	11 f4       	brne	.+4      	; 0x1b8 <main+0x4e>
				ledInvert();
 1b4:	63 df       	rcall	.-314    	; 0x7c <_Z9ledInvertv>
 1b6:	ee cf       	rjmp	.-36     	; 0x194 <main+0x2a>
			}
			else if(n>1){
 1b8:	02 97       	sbiw	r24, 0x02	; 2
 1ba:	64 f3       	brlt	.-40     	; 0x194 <main+0x2a>
				ledInvert();
 1bc:	5f df       	rcall	.-322    	; 0x7c <_Z9ledInvertv>
				delay(220);
 1be:	6c ed       	ldi	r22, 0xDC	; 220
 1c0:	70 e0       	ldi	r23, 0x00	; 0
 1c2:	80 e0       	ldi	r24, 0x00	; 0
 1c4:	90 e0       	ldi	r25, 0x00	; 0
 1c6:	b1 df       	rcall	.-158    	; 0x12a <_Z5delaym>
				ledInvert();
 1c8:	59 df       	rcall	.-334    	; 0x7c <_Z9ledInvertv>
				delay(220);
 1ca:	6c ed       	ldi	r22, 0xDC	; 220
 1cc:	70 e0       	ldi	r23, 0x00	; 0
 1ce:	80 e0       	ldi	r24, 0x00	; 0
 1d0:	90 e0       	ldi	r25, 0x00	; 0
 1d2:	ab df       	rcall	.-170    	; 0x12a <_Z5delaym>
				ledInvert();
 1d4:	53 df       	rcall	.-346    	; 0x7c <_Z9ledInvertv>
				delay(220);
 1d6:	6c ed       	ldi	r22, 0xDC	; 220
 1d8:	70 e0       	ldi	r23, 0x00	; 0
 1da:	80 e0       	ldi	r24, 0x00	; 0
 1dc:	90 e0       	ldi	r25, 0x00	; 0
 1de:	a5 df       	rcall	.-182    	; 0x12a <_Z5delaym>
				ledInvert();
 1e0:	4d df       	rcall	.-358    	; 0x7c <_Z9ledInvertv>
				//
				while(1){
					if(availableExInt()){
 1e2:	6f df       	rcall	.-290    	; 0xc2 <_Z14availableExIntv>
 1e4:	88 23       	and	r24, r24
 1e6:	e9 f3       	breq	.-6      	; 0x1e2 <main+0x78>
						delay(220);
 1e8:	6c ed       	ldi	r22, 0xDC	; 220
 1ea:	70 e0       	ldi	r23, 0x00	; 0
 1ec:	80 e0       	ldi	r24, 0x00	; 0
 1ee:	90 e0       	ldi	r25, 0x00	; 0
 1f0:	9c df       	rcall	.-200    	; 0x12a <_Z5delaym>
		//EIMSK 
		GIMSK= (1<<INT0);
		sei();
	}
	byte readExInt(){
		byte n=flag;
 1f2:	80 91 64 00 	lds	r24, 0x0064	; 0x800064 <flag>
		flag =0;
 1f6:	10 92 64 00 	sts	0x0064, r1	; 0x800064 <flag>
						int l=(int)readExInt();
 1fa:	90 e0       	ldi	r25, 0x00	; 0
						if(l==1)Up();
 1fc:	81 30       	cpi	r24, 0x01	; 1
 1fe:	91 05       	cpc	r25, r1
 200:	11 f4       	brne	.+4      	; 0x206 <main+0x9c>
 202:	2f df       	rcall	.-418    	; 0x62 <_Z2Upv>
 204:	ee cf       	rjmp	.-36     	; 0x1e2 <main+0x78>
						else if(l>1)break;
 206:	02 97       	sbiw	r24, 0x02	; 2
 208:	64 f3       	brlt	.-40     	; 0x1e2 <main+0x78>
					}
				}
				ledInvert();
 20a:	38 df       	rcall	.-400    	; 0x7c <_Z9ledInvertv>
				delay(220);
 20c:	6c ed       	ldi	r22, 0xDC	; 220
 20e:	70 e0       	ldi	r23, 0x00	; 0
 210:	80 e0       	ldi	r24, 0x00	; 0
 212:	90 e0       	ldi	r25, 0x00	; 0
 214:	8a df       	rcall	.-236    	; 0x12a <_Z5delaym>
				ledInvert();
 216:	32 df       	rcall	.-412    	; 0x7c <_Z9ledInvertv>
				delay(220);
 218:	6c ed       	ldi	r22, 0xDC	; 220
 21a:	70 e0       	ldi	r23, 0x00	; 0
 21c:	80 e0       	ldi	r24, 0x00	; 0
 21e:	90 e0       	ldi	r25, 0x00	; 0
 220:	84 df       	rcall	.-248    	; 0x12a <_Z5delaym>
				ledInvert();
 222:	2c df       	rcall	.-424    	; 0x7c <_Z9ledInvertv>
				delay(220);
 224:	6c ed       	ldi	r22, 0xDC	; 220
 226:	70 e0       	ldi	r23, 0x00	; 0
 228:	80 e0       	ldi	r24, 0x00	; 0
 22a:	90 e0       	ldi	r25, 0x00	; 0
 22c:	7e df       	rcall	.-260    	; 0x12a <_Z5delaym>
				ledInvert();
 22e:	26 df       	rcall	.-436    	; 0x7c <_Z9ledInvertv>
 230:	b1 cf       	rjmp	.-158    	; 0x194 <main+0x2a>

00000232 <_exit>:
 232:	f8 94       	cli

00000234 <__stop_program>:
 234:	ff cf       	rjmp	.-2      	; 0x234 <__stop_program>
